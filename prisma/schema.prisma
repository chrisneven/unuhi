generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  authorId  Int?    @map("author_id")
  author    User?   @relation(fields: [authorId], references: [id])

  @@map("posts")
}

model Message {
  id           Int           @id @default(autoincrement())
  key          String        @unique
  translations Translation[]

  @@map("messages")
}

model Translation {
  id          Int      @id @default(autoincrement())
  messageId   Int      @map("message_id")
  languageId  Int      @map("language_id")
  translation String
  language    Language @relation(fields: [languageId], references: [id], onDelete: Cascade)
  message     Message  @relation(fields: [messageId], references: [id], onDelete: Cascade)

  @@unique([messageId, languageId])
  @@map("translations")
}

model Language {
  id           Int           @id @default(autoincrement())
  name         String
  language     String        @unique
  translations Translation[]

  @@map("languages")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  posts         Post[]

  @@map("users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map("compound_id")
  userId             Int       @map("user_id")
  providerType       String    @map("provider_type")
  providerId         String    @map("provider_id")
  providerAccountId  String    @map("provider_account_id")
  refreshToken       String?   @map("refresh_token")
  accessToken        String?   @map("access_token")
  accessTokenExpires DateTime? @map("access_token_expires")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @default(now()) @map("updated_at")

  @@index([userId], map: "userId")
  @@index([providerId], map: "providerId")
  @@index([providerAccountId], map: "providerAccountId")
  @@map("accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  expires      DateTime
  sessionToken String   @unique @map("session_token")
  accessToken  String   @unique @map("access_token")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @map("updated_at")

  @@map("sessions")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")

  @@map("verification_requests")
}
